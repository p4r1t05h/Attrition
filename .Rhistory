boxplot(att$TrainingTimesLastYear, ylab="Training", names = "Boxplot of Training")
plot(density(att$TrainingTimesLastYear))
#Numerical analysis for Years at Company
yearsatcompany.5p<-summary(att$YearsAtCompany)
yearsatcompany.5p
#Visualization of Years at Company
hist(att$YearsAtCompany, main = "Histogram of Years At Company", xlab = "Years at Company")
boxplot(att$YearsAtCompany, ylab="Years At Company", names = "Boxplot of Years at Company")
plot(density(att$YearsAtCompany))
#Numerical analysis for Years in Role
yearsinrole.5p<-summary(att$YearsInCurrentRole)
yearsinrole.5p
#Visualization of Years in Role
hist(att$YearsInCurrentRole, main = "Histogram of Years in Role", xlab = "Years in Role")
boxplot(att$YearsInCurrentRole, ylab="Years in Role", names = "Boxplot of Years in Role")
plot(density(att$YearsInCurrentRole))
#Numerical analysis for Year Since Last Promotion
lastpromotion.5p<-summary(att$YearsSinceLastPromotion)
lastpromotion.5p
#Visualization of Year Since LAst Promotion
hist(att$YearsSinceLastPromotion, main = "Histogram of Year Since Last Promotion", xlab = "Last Promotion")
boxplot(att$YearsSinceLastPromotion, ylab="Last Promotion", names = "Boxplot of Last Promotion")
plot(density(att$YearsSinceLastPromotion))
#Numerical analysis for Years With Current Manager
manager.5p<-summary(att$YearsWithCurrManager)
manager.5p
#Visualization of Years With Current Manager
hist(att$YearsWithCurrManager, main = "Histogram of Current Manager", xlab = "Years with Current Manager")
boxplot(att$YearsWithCurrManager, ylab="Years With Current Manager", names = "Boxplot of Years With Current Manager")
plot(density(att$YearsWithCurrManager))
#Univariate Analysis of Categorical Variables
#Numerical Analysis of Business Travel
prop.table(table(att$BusinessTravel))*100
businesstravel<-as.matrix(table(att$BusinessTravel))
#visualization of Business Travel
barplot(businesstravel, col = c(3,4,5))
pie(businesstravel)
str(att)
#Numerical Analysis of Department
prop.table(table(att$Department))*100
department<-as.matrix(table(att$Department))
#visualization of Department
barplot(department, col = c(3,4,5))
pie(department)
#Numerical Analysis of Environment Satisfaction
prop.table(table(att$EnvironmentSatisfaction))*100
envi<-as.matrix(table(att$EnvironmentSatisfaction))
#visualization of Environment Satisfaction
barplot(envi, col = c(3,4,5))
pie(envi)
#Numerical Analysis of Gender
prop.table(table(att$Gender))*100
gender<-as.matrix(table(att$Gender))
#visualization of Business Travel
barplot(gender)
pie(gender)
#Numerical Analysis of Job Involvement
prop.table(table(att$JobInvolvement))*100
jobinv<-as.matrix(table(att$JobInvolvement))
#visualization of Business Travel
barplot(jobinv)
pie(jobinv)
#Numerical Analysis of Job Level
prop.table(table(att$JobLevel))*100
level<-as.matrix(table(att$JobLevel))
#visualization of Job Level
barplot(level)
pie(level)
#Numerical Analysis of Job Role
prop.table(table(att$JobRole))*100
jobrole<-as.matrix(table(att$JobRole))
#visualization of Business Travel
barplot(jobrole)
pie(jobrole)
#Numerical Analysis of Job Satisfaction
prop.table(table(att$JobSatisfaction))*100
satis<-as.matrix(table(att$JobSatisfaction))
#visualization of Job Satisfaction
barplot(satis)
pie(satis)
#Numerical Analysis of Marital Status
prop.table(table(att$MaritalStatus))*100
marital<-as.matrix(table(att$MaritalStatus))
#visualization of Business Travel
barplot(marital)
pie(marital)
#Numerical Analysis of Overtime
prop.table(table(att$OverTime))*100
overtime<-as.matrix(table(att$OverTime))
#visualization of Business Travel
barplot(overtime)
pie(overtime)
#Numerical Analysis of Performance Rating
prop.table(table(att$PerformanceRating))*100
perform<-as.matrix(table(att$PerformanceRating))
#visualization of Business Travel
barplot(perform)
pie(perform)
#Numerical Analysis of Relationship Satisfaction
prop.table(table(att$RelationshipSatisfaction))*100
relation<-as.matrix(table(att$RelationshipSatisfaction))
#visualization of Relationship Statisfaction
barplot(relation)
pie(relation)
#Numerical Analysis of Stock Option
prop.table(table(att$StockOptionLevel))*100
stock<-as.matrix(table(att$StockOptionLevel))
#visualization of Business Travel
barplot(stock)
pie(stock)
#Numerical Analysis of Work Life Balance
prop.table(table(att$WorkLifeBalance))*100
worklife<-as.matrix(table(att$WorkLifeBalance))
#visualization of Work Life Balance
barplot(worklife)
pie(worklife)
#Numerical Analysis of Age Group
prop.table(table(att$Age_Group))*100
agegroup<-as.matrix(table(att$Age_Group))
#visualization of Business Travel
barplot(agegroup)
pie(agegroup)
#Bivariate Analysis
#C->Q (Q=Monthly Income)
a<-str(att)
#Numerical Analysis of Business Travel-> Monthly Income
cq1<-boxplot(att$MonthlyIncome~att$BusinessTravel)
cq1$stats
tapply(att$MonthlyIncome, att$BusinessTravel, summary)
#Dependency test
#Paired t Test
#t.test(att$MonthlyIncome, att$BusinessTravel, alternative = "l", paired = TRUE)
cq1.aov<-aov(att$MonthlyIncome~att$BusinessTravel)
summary(cq1.aov)
cq1<-boxplot(att$MonthlyIncome~att$BusinessTravel)
cq1$stats
tapply(att$MonthlyIncome, att$BusinessTravel, summary)
cq1.aov<-aov(att$MonthlyIncome~att$BusinessTravel)
summary(cq1.aov)
cq2<-boxplot(att$MonthlyIncome~att$Department)
cq2$stats
tapply(att$MonthlyIncome, att$Department, summary)
cq2.aov<-aov(att$MonthlyIncome~att$Department)
summary(cq2.aov)
cq3<-boxplot(att$MonthlyIncome~att$Education)
cq3$stats
tapply(att$MonthlyIncome, att$Education, summary)
cq3.aov<-aov(att$MonthlyIncome~att$Education)
summary(cq2.aov)
cq4<-boxplot(att$MonthlyIncome~att$EducationField)
cq4$stats
tapply(att$MonthlyIncome, att$EducationField, summary)
summary(cq3.aov)
cq4<-boxplot(att$MonthlyIncome~att$EducationField)
cq4$stats
tapply(att$MonthlyIncome, att$EducationField, summary)
#Dependency Test
cq4.aov<-aov(att$MonthlyIncome~att$EducationField)
summary(cq4.aov)
View(att)
par(mfrow=c(1,1))
str(att)
cq5<-boxplot(att$MonthlyIncome~att$EnvironmentSatisfaction)
cq5$stats
tapply(att$MonthlyIncome, att$EnvironmentSatisfaction, summary)
cq5.aov<-aov(att$MonthlyIncome~att$EnvironmentSatisfaction)
summary(cq5.aov)
summary(cq5.aov)
rm(list=ls())
library(ISLR)
data("mtcars")
cars<-mtcars
str(mtcars)
head(mtcars)
hist(cars$mpg)
summary(cars$mpg)
boxplot(cars$mpg)$stats
plot(mpg~wt, data = cars)
pairs(cars[1:5])
cor(cars$mpg, cars$wt)
#SLR
cars.lm1<-lm(mpg~wt, data = cars)
summary(cars.lm1)
abline(cars.lm1)
?lm
par(mfrow = c(1,2))
cars.lm1$coefficients
confint(cars.lm1)
plot(cars.lm1$fitted.values~cars$wt)
plot(cars$wt,cars.lm1$residuals)
rss1<-sum(cars.lm1$residuals^2)
summary(cars.lm1)$sigma
tss1<-sum((cars$mpg-mean(cars$mpg))^2)
summary(cars.lm1)
warnings()
summary(cars)
plot(cars.lm1,1)
#RSS=278.32
#RSE=3.046
#R2 = 0.75
#Adjusted R2 = 0.74
#MLR
cars.lm2<-lm(mpg~wt+hp, data = cars)
summary(cars.lm2)
rss2<-sum(cars.lm2$residuals^2)
plot(cars.lm2,1)
#RSS=195.48
#RSE=2.593
#R2 = 0.83
#Adjusted R2=0.815
#C->Q
cars$cyl<-as.factor(cars$cyl)
cars.lm3<-lm(mpg~cyl, data = cars)
summary(cars.lm3)
rss3<-sum(cars.lm3$residuals^2)
plot(cars.lm3,1)
#RSS=301.263
#RSE=3.223
#R2 = 0.73
#Adjusted R2=0.714
cars.lm4<-lm(mpg~wt+hp+cyl, data = cars)
summary(cars.lm4)
rss4<-sum(cars.lm4$residuals^2)
plot(cars.lm4,1)
#RSS=160.78
#RSE=2.44
#R2 = 0.86
#Adjusted R2=0.84
cars.lm5<-lm(mpg~wt+hp+cyl+wt*hp, data = cars)
summary(cars.lm5)
rss5<-sum(cars.lm5$residuals^2)
plot(cars.lm5,1)
#RSS=126.16
#RSE=2.203
#R2 = 0.888
#Adjusted R2=0.8664
cars.lm6<-lm(mpg~hp, data = cars)
summary(cars.lm6)
rss6<-sum(cars.lm6$residuals^2)
plot(cars.lm6,1)
#RSS=447.67
#RSE=3.863
#R2 = 0.6024
#Adjusted R2=0.5892
cars.lm7<-lm(mpg~hp+I(hp^2), data = cars)
summary(cars.lm7)
rss7<-sum(cars.lm7$residuals^2)
plot(cars.lm7,1)
#RSS=274.63
#RSE=3.077
#R2 = 0.756
#Adjusted R2=0.7393
cars.lm8<-lm(mpg~poly(hp^3), data = cars)
summary(cars.lm8)
rss8<-sum(cars.lm8$residuals^2)
plot(cars.lm8,1)
#RSS=790.218
#RSE=5.132
#R2 = 0.2982
#Adjusted R2=0.2748
cars.lm9<-lm(mpg~wt+hp+cyl+wt*hp+I(hp^2), data = cars)
summary(cars.lm9)
rss9<-sum(cars.lm9$residuals^2)
plot(cars.lm9,1)
#RSS=121.56
#RSE=2.205
#R2 = 0.892
#Adjusted R2=0.8661
cars.lm10<-lm(mpg~., data = cars)
summary(cars.lm10)
rss10<-sum(cars.lm10$residuals^2)
plot(cars.lm10,1)
#RSS=133.32
#RSE=2.58
#R2 = 0.8816
#Adjusted R2=0.8165
cars.lm11<-lm(mpg~.+wt*hp+I(hp^2), data = cars)
summary(cars.lm11)
rss11<-sum(cars.lm11$residuals^2)
plot(cars.lm11,1)
#RSS=96.81
#RSE=2.319
#R2 = 0.914
#Adjusted R2=0.8519
#========================================
cars.aov<-anova(cars.lm1, cars.lm2, cars.lm4, cars.lm5, cars.lm9, cars.lm11)
cars.aov
predict(cars.lm2, data.frame(wt=c(2.5,3.5,4.5,5.5), hp=c(100,200,250,350)))
#===========================================
library(glmnet)
library(MASS)
data("Hitters")
Hitter1=data.frame(Hitters)
head(Hitter1)
str(Hitter1)
Hitter1=na.omit(Hitter1)
##Ridge Regression
#Creates a Model matrix by expanding factors and interactions
x=model.matrix(Salary~., Hitter1)
head(x)
x=x[,-1] #Remove Intercept
head(x)
y=(Hitter1$Salary) #A vector of Salary
head(y)
grid=10^seq(10,-2,length=100) #creates a grid of 100 tuning parameters
ridge.mod=glmnet(x,y,alpha = 0, lambda = grid) #alpha=0 (ridge), #alpha=1 (Lasso)
dim(coef(ridge.mod)) #100sets of coefficients for each lambda
ridge.mod$lambda[50] #value of lambda
coef(ridge.mod)[,50] #coefficients at this lambda
rbind(ridge.mod$lambda[c(1,30,40,50,60,70,80,90,100)],
coef(ridge.mod)[2:10,c(1,30,40,50,60,70,80,90,100)])
rm(list = ls())
library(glmnet)
library(MASS)
data("Hitters")
Hitter1=data.frame(Hitters)
head(Hitter1)
str(Hitter1)
Hitter1=na.omit(Hitter1)
x=model.matrix(Salary~., Hitter1)
head(x)
x=x[,-1] #Remove Intercept
head(x)
y=(Hitter1$Salary) #A vector of Salary
head(y)
#Grid of Lambda
grid=10^seq(10,-2,length=100) #creates a grid of 100 tuning parameters
seq(10,-2,length=100)
grid
head(grid)
tail(grid)
tail(grid,20)
ridge.mod=glmnet(x,y,alpha = 0, lambda = grid) #alpha=0 (ridge), #alpha=1 (Lasso)
ridge.mod
dim(coef(ridge.mod)) #100sets of coefficients for each lambda
coef(ridge.mod)
dim(coef(ridge.mod)) #100sets of coefficients for each lambda
ridge.mod$lambda[50] #value of lambda
coef(ridge.mod)[,50] #coefficients at this lambda
ridge.mod$lambda[c(1,30,40,50,60,70,80,90,100)],
coef(ridge.mod)[2:10,c(1,30,40,50,60,70,80,90,100)]
rbind(ridge.mod$lambda[c(1,30,40,50,60,70,80,90,100)],
coef(ridge.mod)[2:10,c(1,30,40,50,60,70,80,90,100)])
ridge.mod$lambda[c(1,30,49,50,51,70,80,90,100)],
coef(ridge.mod)[2:10,c(1,30,49,50,51,70,80,90,100)]
ridge.mod$lambda[50] #value of lambda
coef(ridge.mod)[,50] #coefficients at this lambda
ridge.mod
head(grid[50])
predict(ridge.mod, s=50, type = "coefficient")
?predict
predict.glmnet(ridge.mod, s=50, x,y, exact = T)
?predict.glmnet
predict.glmnet(ridge.mod, s=50, x=x,y=y, exact = T)
train<-sample(1:nrox(x), nrow(x)/2)
train<-sample(1:nrow(x), nrow(x)/2)
train
set.seed(1)
train<-sample(1:nrow(x), nrow(x)/2)
train
test=-train
test
x[train]
x[test]
train<-c(1,2,3,4,5)
test=-train
test
x[train]
set.seed(1)
train<-sample(1:nrow(x), nrow(x)/2)
train
test=-train
test
x[train]
x[test]
test
train
test
x[train]
x[test]
train<-sample(1:5, 3)
train
test=-train
test
x[train]
x
x[test]
y.test<-y[test]
ridge.mod1=glmnet(x[train,],y[train],alpha = 0, lambda = grid)
set.seed(1)
train<-sample(1:nrow(x), nrow(x)/2)
train
test=-train
test
x
train
x[test]
y.test<-y[test]
ridge.mod1=glmnet(x[train,],y[train],alpha = 0, lambda = grid)
set.seed(1)
train<-sample(1:nrow(x), nrow(x)/2)
train
test=-train
test
x
train
x[test]
y.test<-y[test]
ridge.mod1=glmnet(x[train,],y[train,],alpha = 0, lambda = grid)
ridge.pred<-predict(ridge.mod1, s=4, newx = x[test,])
ridge.pred
set.seed(1)
train<-sample(1:nrow(x), nrow(x)/2)
train
test=-train
test
x
train
x[test]
y.test<-y[test]
ridge.mod1=glmnet(x[train,],y[train],alpha = 0, lambda = grid)
ridge.pred<-predict(ridge.mod1, s=4, newx = x[test,])
ridge.pred
err<-mean((ridge.pred-y[test])^2)
err
set.seed(1)
train<-sample(1:nrow(x), nrow(x)/2)
train
test=-train
test
x
train
x[test]
y.test<-y[test]
ridge.mod1=glmnet(x[train,],y[train],alpha = 0, lambda = grid)
ridge.pred<-predict(ridge.mod1, s=4, newx = x[test,])
err<-mean((ridge.pred-y[test])^2)
err
ridge.pred<-predict(ridge.mod1, s=1e10, newx = x[test,])
err<-mean((ridge.pred-y[test])^2)
err
ridge.pred<-predict(ridge.mod1, s=0, newx = x[test,])
err<-mean((ridge.pred-y[test])^2)
err
set.seed(1)
cv.out<-cv.glmnet(x[train,], y[train], alpha=0)
cv.out
plot(cv.out)
cv.out$lambda.min
set.seed(1)
cv.out<-cv.glmnet(x[train,], y[train], alpha=0)
plot(cv.out)
bestlam<-cv.out$lambda.min
bestlam
ridge.pred<-predict(ridge.mod1, s=bestlam, newx = x[test,])
ridge.pred
err<-mean((ridge.pred-y[test])^2)
err
set.seed(1)
train<-sample(1:nrow(x), nrow(x)/2)
train
test=-train
test
x
train
x[test]
y.test<-y[test]
cv1.out<-cv.glmnet(x[train,], y[train], alpha=0)
plot(cv.out1)
bestlam1<-cv.out1$lambda.min
lasso.mod1=glmnet(x[train,],y[train],alpha = 1)
lasso.pred1<-predict(ridge.mod1, s=bestlam1, newx = x[test,])
err1<-mean((ridge.pred1-y[test])^2)
err1
cv1.out<-cv.glmnet(x[train,], y[train], alpha=1)
plot(cv.out1)
cv.out1<-cv.glmnet(x[train,], y[train], alpha=1)
plot(cv.out1)
bestlam1<-cv.out1$lambda.min
lasso.mod1=glmnet(x[train,],y[train],alpha = 1)
lasso.pred1<-predict(ridge.mod1, s=bestlam1, newx = x[test,])
err1<-mean((ridge.pred1-y[test])^2)
lasso.pred1<-predict(lasso.mod1, s=bestlam1, newx = x[test,])
err1<-mean((lasso.pred1-y[test])^2)
err1
bestlam1
cv.out2<-cv.glmnet(x, y, alpha=1)
plot(cv.out2)
bestlam2<-cv.out2$lambda.min
lasso.mod2=glmnet(x,y,alpha = 1)
lasso.pred2<-predict(lasso.mod2, s=bestlam2, newx = x)
err2<-mean((lasso.pred2-y)^2)
err2
lasso.coeff<-glmnet(cv.out2, type="coefficient", lambda = bestlam2)
lasso.coeff<-glmnet(cv.out2, type="coefficients", lambda = bestlam2)
cv.out2<-cv.glmnet(x, y, alpha=1, lambda = grid)
plot(cv.out2)
bestlam2<-cv.out2$lambda.min
lasso.mod2=glmnet(x,y,alpha = 1, lambda = grid)
lasso.pred2<-predict(lasso.mod2, s=bestlam2, newx = x)
err2<-mean((lasso.pred2-y)^2)
err2
lasso.coeff<-glmnet(cv.out2, type="coefficients", lambda = bestlam2)[1:20,]
lasso.out<-glmnet(x,y,alpha = 1, lambda=grid)
lasso.coeff<-predict(lasso.out, type = "coefficients", lambda = bestlam1)
lasso.coeff
lasso.coeff<-predict(lasso.out, type = "coefficients", lambda = bestlam1)[1:20,]
lasso.coeff
z<-predict(lasso.out, type = "coefficients", s = bestlam1)[1:20,]
z
z!=0
z[z!=0]
